import "./InsertCSVForm.css";
import { Button, Form } from "react-bootstrap";
import { FormEvent, useState } from "react";
import { postVulnerabilityCSV } from "../../../../utils/api";
import { AxiosError } from "axios";
import Swal from "sweetalert2";

interface InsertCSVProps {
  visible?: boolean;
  onHiding?: () => void;
}

function InsertCSVForm({
  visible = false,
  onHiding = () => {},
}: InsertCSVProps) {
  const [validated, setValidated] = useState<boolean>(false);

  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
    const form = event.currentTarget;

    if (form.checkValidity() === false) {
      event.preventDefault();
      event.stopPropagation();
    } else {
      event.preventDefault();
      const formData = new FormData(form);
      await sendVulnerabilityCSV(formData);
    }

    setValidated(true);
  };

  const sendVulnerabilityCSV = async (fileFormData: FormData) => {
    let res = await postVulnerabilityCSV(fileFormData);

    if (res.status == 201) handleSuccess();
    else handleError(res as AxiosError);
  };

  const handleSuccess = () => {
    Swal.fire({
      title: "Dados registrados",
      text: "O arquivo foi importado com sucesso!",
      icon: "success",
      confirmButtonColor: "#2bcc23",
    });

    hide();
  };

  const handleError = (res: AxiosError) => {
    console.error(res);
    let title = "";
    let text = "";

    if (res.request.status === 400) {
      title = "Formato Incorreto";
      text = "Os dados inseridos não estão no formato adequado.";
    } else {
      title = "Erro Interno";
      text =
        "Houve um erro na comunicação com o servidor. Por favor contate um administrador do sistema.";
    }

    Swal.fire({
      title: title,
      text: text,
      icon: "error",
      confirmButtonColor: "#9c2219",
    });
  };

  const hide = () => {
    setValidated(false);
    onHiding();
  };

  return (
    <>
      {visible && (
        <Form
          noValidate
          validated={validated}
          className="insert-csv-form"
          onSubmit={handleSubmit}
        >
          <Form.Group className="mb-3">
            <Form.Label>
              Importe os dados a partir de um arquivo CSV.
            </Form.Label>
            <Form.Control required type="file" name="file" accept=".csv" />
            <Form.Control.Feedback type="invalid">
              Por favor insira um arquivo com extensão .csv
            </Form.Control.Feedback>
          </Form.Group>

          <Button variant="success" type="submit">
            Importar
          </Button>
          <Button onClick={hide} variant="outline-secondary">
            Voltar
          </Button>
        </Form>
      )}
    </>
  );
}

export default InsertCSVForm;
